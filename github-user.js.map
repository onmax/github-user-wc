{"version":3,"file":"github-user.js","sourceRoot":"","sources":["src/github-user.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAc1C;;;;;GAKG;AAEH,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,UAAU;IAOxC;QACE,4BAA4B;QAC5B,KAAK,EAAE,CAAC;QAIV;;WAEG;QAEH,aAAQ,GAAG,EAAE,CAAC;QAPZ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACxB,CAAC;IAQQ,wBAAwB,CAAC,IAAY,EAAE,CAAS,EAAE,QAAgB;QACzE,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;QAC7B,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,aAAa,EAAE,CAAA;SACrB;IACH,CAAC;IAKD,KAAK,CAAC,aAAa;QACjB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC3B,OAAM;SACP;QACD,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,gCAAgC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;QACxE,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAA;QAC7B,IAAI,CAAC,IAAI,GAAG;YACV,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,KAAK;YACpB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,2BAA2B,IAAI,CAAC,QAAQ,EAAE;YACrD,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,sBAAsB,IAAI,CAAC,QAAQ,mBAAmB;YACjE,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,aAAa,EAAE,sBAAsB,IAAI,CAAC,QAAQ,gBAAgB;SACnE,CAAA;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;IAGQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;QAIP,IAAI,CAAC,IAAI,CAAC,CAAC;YACX,IAAI,CAAA;uBACW,IAAI,CAAC,IAAI,CAAC,UAAU;sBACrB,IAAI,CAAC,IAAI,CAAC,QAAQ;qBACnB,IAAI,CAAC,IAAI,CAAC,QAAQ;;;sBAGjB,IAAI,CAAC,IAAI,CAAC,SAAS;;;8DAGqB,IAAI,CAAC,IAAI,CAAC,YAAY;;;sBAG9D,IAAI,CAAC,IAAI,CAAC,SAAS;;;8DAGqB,IAAI,CAAC,IAAI,CAAC,YAAY;;;sBAG9D,IAAI,CAAC,IAAI,CAAC,aAAa;;;8DAGiB,IAAI,CAAC,IAAI,CAAC,SAAS;;;SAGxE;YACD,CAAC;gBACD,IAAI,CAAA,gBACN;iBACW,CAAA;IACf,CAAC;CACF,CAAA;AAvFiB,iBAAM,GAAG,GAAG,CAAA;;;;GAI1B,CAAA;AAYF;IADC,QAAQ,EAAE;4CACG;AAWd;IADC,KAAK,EAAE;wCACuB;AA5BpB,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAwFtB;SAxFY,UAAU","sourcesContent":["import { html, css, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { state } from 'lit/decorators.js';\n\ninterface IGithubUser {\n  avatar_url: string;\n  username: string;\n  user_url: string;\n  public_gists: number;\n  gists_url: string;\n  public_repos: number;\n  repos_url: string;\n  followers: number;\n  followers_url: string;\n}\n\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n */\n@customElement('github-user')\nexport class GithubUser extends LitElement {\n  static override styles = css`\n    :host {\n      display: flex\n    }\n  `;\n\n  constructor() {\n    // Always call super() first\n    super();\n    this.user = undefined;\n  }\n\n  /**\n   * Github username\n   */\n  @property()\n  username = \"\";\n\n  override attributeChangedCallback(name: string, _: string, newValue: string) {\n    console.log(\"updating\", name)\n    if (name === 'username') {\n      this.username = newValue;\n      this.setGithubUser()\n    }\n  }\n\n  @state()\n  user!: IGithubUser | undefined;\n\n  async setGithubUser() {\n    if (!this || !this.username) {\n      return\n    }\n    const req = await fetch(`https://api.github.com/users/${this.username}`)\n    const json = await req.json()\n    this.user = {\n      avatar_url: json.avatar_url,\n      user_url: json.html_url,\n      username: json.login,\n      public_gists: json.public_gists,\n      gists_url: `https://gist.github.com/${this.username}`,\n      public_repos: json.public_repos,\n      repos_url: `https://github.com/${this.username}?tab=repositories`,\n      followers: json.followers,\n      followers_url: `https://github.com/${this.username}?tab=followers`,\n    }\n    console.log('json', json);\n    console.log('User data updated', this.user);\n  }\n\n\n  override render() {\n    return html`\n    <!-- It is not very clever to use TailwindCSS like this, just doing it because it is easier -->\n    <link href=\"https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css\" rel=\"stylesheet\">\n    <section class=\"rounded-xl px-3 py-1.5 border border-gray-200 grid grid-cols-3 justify-center items-center font-sans gap-x-3 gap-y-2 \">\n      ${this.user ?\n        html`\n          <img .src= ${this.user.avatar_url} class=\"h-10 rounded-full shadow-inner\"/>\n          <a .href=\"${this.user.user_url}\" target=\"_blank\">\n            <span>@${this.user.username}</span>\n          </a>\n          <span></span>\n          <a .href=\"${this.user.repos_url}\" target=\"_blank\">\n            <div class=\"flex flex-col items-center font-mono hover:bg-gray-100 p-1 rounded\">\n              <span class=\"text-gray-600 uppercase text-xs\">Repos</span>\n              <span class=\"text-gray-600 font-bold text-sm\">${this.user.public_repos}</span>\n            </div>\n          </a>\n          <a .href=\"${this.user.gists_url}\" target=\"_blank\">\n            <div class=\"flex flex-col items-center font-mono hover:bg-gray-100 p-1 rounded\">\n              <span class=\"text-gray-600 uppercase text-xs\">Gists</span>\n              <span class=\"text-gray-600 font-bold text-sm\">${this.user.public_gists}</span>\n            </div>\n          </a>\n          <a .href=\"${this.user.followers_url}\" target=\"_blank\">\n            <div class=\"flex flex-col items-center font-mono hover:bg-gray-100 p-1 rounded\">\n              <span class=\"text-gray-600 uppercase text-xs\">Followers</span>\n              <span class=\"text-gray-600 font-bold text-sm\">${this.user.followers}</span>\n            </div>\n          </a>\n        `\n        :\n        html`User not found`\n      }\n      </section>`\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"github-user\": GithubUser;\n  }\n}\n"]}